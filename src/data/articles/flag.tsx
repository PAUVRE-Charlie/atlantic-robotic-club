/**
 * This file store an article used in this website
 */

/* Packages */
import React from 'react';
import MathJax from 'react-mathjax';

/* Types */
import { Article } from '../../utils';

/* Data */
import images from '../images';
import { navigation } from '../navigation';
import team from '../team';

const article: Article = {
    id: 16,
    title: "Dispositif pour hisser les pavillons",
    category: navigation.robot,
	author: team.members.find(member=> member.lastname === 'Hamel'),
	preview:
		"L‚Äôobjectif de ce dispositif est de hisser deux pavillons de surface sup√©rieur √† 30 cm2 chacun au-del√† d‚Äôune hauteur de 35cm dans les 5 derni√®res secondes du match. Cette mission permet de rapporter 10 points lors de la coupe si elle est r√©ussie.",
	body:[
        {
            title: "Objectif",
            body: (
                <React.Fragment>
                    <span>L‚Äôobjectif de ce dispositif est de hisser deux pavillons de surface sup√©rieur √† 30 cm2 chacun au-del√† d‚Äôune hauteur de 35cm dans les 5 derni√®res secondes du match. Cette mission permet de rapporter 10 points lors de la coupe si elle est r√©ussie.</span>
                </React.Fragment>
            )
        },
        {
            title: "Consid√©rations physiques",
            body: (
                <MathJax.Provider>
                    <div className="mathJaxContainer">
                        <span>Pour atteindre cet objectif, nous allons mettre en ≈ìuvre un dispositif qui s‚Äôapparente √† une glissi√®re qui coulisse dans son support. Cette glissi√®re sera projet√©e en l‚Äôair gr√¢ce √† un ressort et maintenue en l‚Äôair gr√¢ce √† un aimant. Commen√ßons par mod√©liser th√©oriquement notre glissi√®re. On assimilera cette glissi√®re par un point mat√©riel dans un premier temps de masse m pos√©e sur un support de masse m‚Äô et on ne prendra pas en compte les frottements. Le sch√©ma suivant illustre la situation de d√©part √† gauche et la situation finale √† droite. On prendra comme origine la position √† l‚Äô√©quilibre du syst√®me.</span>
                        <img className="smallImage" src={images.flag.blueprint.src} alt={images.flag.blueprint.name} />
                        <span>On appuie ensuite √† <MathJax.Node inline formula={`t=0`} /> sur sur le plateau qui se d√©place vers le bas d‚Äôune distance d et on le l√¢che sans vitesse initiale.</span>
                        <span>L‚Äôallongement alg√©brique <MathJax.Node inline formula={`ùö´z_{eq}`} /> du ressort lorsque l‚Äôensemble est √† l‚Äô√©quilibre est: </span>
                        <MathJax.Node formula={`ùö´z_{eq} = - \\frac{m+m'}{k}*g`}/>
                        <span>L‚Äô√©quation diff√©rentielle r√©gissant les oscillations est: </span>
                        <MathJax.Node formula={`\\frac{d^2z}{dt^2} + \\frac{k}{m+m'}z = 0`} />
                        <span> avec comme pulsation de r√©f√©rence: </span>
                        <MathJax.Node formula={`\\omega_0^2=\\frac{k}{m+m'}`} />
                        <span>La loi horaire est de la forme: </span>
                        <MathJax.Node formula={`z(t)=-d \\cos{(\\omega_0t)}`} />
                        <span>Int√©ressons nous maintenant √† la condition √† laquelle la masse va quitter le support.</span>
                        <span>La r√©action du support prend la forme suivante: </span>
                        <MathJax.Node formula={`R = m(d\\omega_0^2\\cos{(\\omega_0t)}+g)`} />
                        <span>La masse pourra d√©coller seulement si <MathJax.Node inline formula={`R=0`} />, ce qui revient √† ce que <MathJax.Node inline formula={`-1\\le -\\frac{g}{d\\omega_0^2} \\le 1`} />.</span>
                        <br/>
                        <span>Ce qui revient √†: <MathJax.Node inline formula={`g < d\\omega_0^2`}/>.</span>
                        <span>Cherchons maintenant √† d√©terminer la distance <MathJax.Node inline formula={`d`} /> que l‚Äôon doit enfoncer le ressort pour pouvoir obtenir la hauteur <MathJax.Node inline formula={`H`} /> d√©sir√©e.</span>
                        <span>On utilise pour cela le th√©or√®me de l‚Äô√©nergie m√©canique en supposant aucune force externe ni non conservative. On obtient les relations suivantes:</span>
                        <MathJax.Node formula={`E_{m,initiale} = E_{m,finale}`}/>
                        <MathJax.Node formula={`\\frac{k(d+\\frac{(m+m')*g}{k})^2}{2}-m*g*d=m*g*H`}/>
                        <span>Il reste plus qu‚Äô√† r√©soudre cette √©quation d‚Äôordre 2 en imposant la condition d‚Äôobtenir une valeur positive de <MathJax.Node inline formula={`d`} />.</span>
                    </div>
                    
                </MathJax.Provider>
            )
        },
        {
            title: "Mod√©lisation",
            body: (
                <React.Fragment>
                    <p>Nous avons mod√©lis√© sur le logiciel Autodesk Fusion 360 la glissi√®re, son support et la structure permettant de la faire glisser. Il s‚Äôagit d‚Äôune premi√®re mod√©lisation qui sera affin√©e par la suite en fonction des diff√©rents essais qui permettra de valider ou non la th√©orie. Les dimensions et le design sont amen√©s √† changer en fonction de la base mobile finale. La mod√©lisation √† gauche repr√©sente la glissi√®re totalement baiss√©e alors que celle de droite montre la glissi√®re relev√©e √† la hauteur attendue. Sur cette mod√©lisation ne sont pas repr√©sent√©s le ressort, le support et le moteur qui actionne le m√©canisme qui lib√©rera la glissi√®re au moment attendu.</p>
                    <div className="multipleImages">
                        <img className="verySmallImage" src={images.flag.model1.src} alt={images.flag.model1.name} />
                        <img className="verySmallImage" src={images.flag.model2.src} alt={images.flag.model2.name} />
                    </div>
                </React.Fragment>
            )
        },
        {
            title: "Exp√©riences",
            body: (
                <React.Fragment>
                    <p>La premi√®re exp√©rience consistera √† v√©rifier la hauteur atteinte par la glissi√®re gr√¢ce √† l‚Äôimpulsion initiale donn√©e au ressort ainsi que de v√©rifier le temps mis par la glissi√®re pour atteindre cette hauteur. La seconde exp√©rience consistera quant √† elle √† tester le m√©canisme qui lib√©rera la glissi√®re gr√¢ce √† l‚Äôaction du moteur et √† valider le m√©canisme d‚Äôarr√™t de la glissi√®re √† la hauteur souhait√©e.</p>
                </React.Fragment>
            )
        },
        {
            title: "Conclusion et perspectives",
            body: (
                <React.Fragment>
                    <p>En l‚Äô√©tat actuel des choses, il reste √† imprimer les pi√®ces de la mod√©lisation et √† commander le mat√©riel pour r√©aliser les exp√©riences au mois de Janvier.</p>
                </React.Fragment>
            )
        },
        {
            title: "Bibliographie",
            body: (
                <React.Fragment>
                    <ul>
                        <li><a href="https://www.camerecole.org/classes/135-correction-les-oscillateurs-mecaniques.html#les-oscillateurs-mecaniques-13">Concept th√©orique</a> (Exercice VII)</li>
                        <li>Mod√©lisation librement inspir√©e de l'√©quipe des Karibous</li>
                    </ul>
                </React.Fragment>
            )
        },
    ]
}

export default article;